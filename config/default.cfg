imports: ['acq4_autopatch']

# drivers:
#     sensapex:
#         driverPath: "C:\\Users\\autopatch\\acq4"

# Devices are defined in another config file:
devices: readConfigFile('devices.cfg') 

modules:
    Data Manager:
        module:  'DataManager'
        shortcut: 'F2'
    Camera:
        module: 'Camera'
        shortcut: 'F5'

    Autopatch:
        module: 'acq4_autopatch.module.AutopatchModule'
        shortcut: 'F7'
        config:
            patchDevices:
                # PatchPipette1: "PipetteRegion1"  # bottom-right quad
                PatchPipette2: "PipetteRegion2"  # top-right quad
            wellPositions: []  # Handled by RecordingChamber now
            imagingDevice: 'Camera'
            patchStates:
                cell detect:
                    maxAdvanceDistancePastTarget: 5*um
                seal:
                    autoSealTimeout: 120
                    pressureMode: 'auto'
                cell attached:
                    autoBreakInDelay: 5.0
                clean:
                    approachHeight: 1 * mm
                    cleanSequence: [(-35e3, 1.0), (65e3, 1.5)] * 5
#                    rinseSequence: [(-35e3, 3.0), (65e3, 15.0)]
                    rinseSequence: []  # no rinse for now
            # cameraChannels:
            #     # Use different (exposure, trigger) DAQ lines for each pipette device
            #     PatchPipette1: ('/Dev2/port0/line1', '/Dev2/port0/line0')
            #     PatchPipette2: ('/Dev2/port0/line1', '/Dev2/port0/line0')

    MultiPatch:
        module: 'MultiPatch'
        shortcut: 'F4'
        config:
            enableMockPatch: True
    Task Runner:
        module: 'TaskRunner'
        shortcut: 'F6'
        config:
            ## Directory where Task Runner stores its saved tasks.
            taskDir: 'config/protocols'
    Patch 1:
        module: 'Patch'
        shortcut: 'F3'
        config:
            clampDev: 'Clamp1'
    Console:
        module: 'Console'
        shortcut: 'F8'
        config: None
    TaskMonitor:
        module: 'TaskMonitor'
            
## Defines the folder types that are available when creating a new folder via
## the Data Manager. Each folder type consists of a set of metadata fields
## that will be created with the folder.            
folderTypes: readConfigFile('folderTypes.cfg')

## Base directory where ACQ4 will keep acquired data. It is recommended
## that experimenters create a hierarchy of folders within this directory to
## organize their data.
storageDir: 'C:\\Users\\autopatch\\data'

## Default compression method to use when writing HDF5 data files. Examples:
##   'gzip'        # Widely available filter, but slow
##   ('gzip', 1)   # Same filter with compression level given (0-9)
##   'lzf'         # Fastest compression; generally only available with h5py
##   'szip'        # Proprietary filter; faster but not available everywhere
##   None          # No compression
## By default, we disable compression because 'gzip' is too slow and 
## 'lzf' / 'szip' are not available on all HDF5 installations.
defaultCompression: None

cudaImageProcessing: False

configurations:
    TestUser_1:
        storageDir: 'C:\\Users\\autopatch\\data\\testuser1'


## For controlling the appearance of the GUI:            
stylesheet: 'style.css'